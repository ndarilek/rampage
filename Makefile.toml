[env]
CARGO_MANIFEST_DIR = "${CARGO_MAKE_WORKING_DIRECTORY}"
ITCH_USERNAME = "thewordnerd"

[env.release]
CARGO_RELEASE_ARGS = "--release"

[tasks.test]
disabled = true

[tasks.build]
args = ["build",  "@@split(CARGO_RELEASE_ARGS, )"]

[tasks.trace]
command = "cargo"
args = ["run", "--features", "trace,trace_chrome", "@@split(CARGO_RELEASE_ARGS, )"]

[tasks.release-config]
script_runner = "@duckscript"
script = '''
dist_artifact = set ${CARGO_MAKE_PROJECT_NAME}-${CARGO_MAKE_RUST_TARGET_OS}-${CARGO_MAKE_RUST_TARGET_ARCH}
dist_dir = set dist/${dist_artifact}
set_env dist_dir ${dist_dir}
set_env dist_artifact ${dist_artifact}
'''

[tasks.release-clean]
dependencies = ["release-config"]
script_runner = "@duckscript"
script = '''
rm -r ${dist_dir}
'''

[tasks.release]
dependencies = ["build", "release-config", "release-pre", "release-post", "release-package"]

[tasks.release-pre]
script_runner = "@duckscript"
script = '''
mkdir ${dist_dir}
cp assets ${dist_dir}
cp alsoft.ini ${dist_dir}/alsoft.ini
'''

[tasks.release-post]
linux_alias = "release-post-linux"
mac_alias = "release-post-mac"
windows_alias = "release-post-windows"

[tasks.release-post-linux]
script_runner = "@duckscript"
script = '''
cp target/release/${CARGO_MAKE_PROJECT_NAME} ${dist_dir}/${CARGO_MAKE_PROJECT_NAME}
'''

[tasks.release-post-mac]
script_runner = "@duckscript"
script = '''
cp target/release/${CARGO_MAKE_PROJECT_NAME} ${dist_dir}/${CARGO_MAKE_PROJECT_NAME}
'''

[tasks.release-post-windows]
script_runner = "@duckscript"
script = '''
dlls = glob_array target/release/*.dll
for path in ${dlls}
    file = basename ${path}
    cp ${path} ${dist_dir}/${file}
end

dlls = glob_array lib/win64/*.dll
for path in ${dlls}
    file = basename ${path}
    cp ${path} ${dist_dir}/${file}
end

exes = glob_array target/release/*.exe
for path in ${exes}
    file = basename ${path}
    cp ${path} ${dist_dir}/${file}
end
'''

[tasks.release-package]
linux_alias = "release-package-linux"
mac_alias = "release-package-mac"
windows_alias = "release-package-windows"

[tasks.release-package-linux]
script_runner = "@duckscript"
script = '''
cd dist/
mkdir appdir/usr/bin
cp ${dist_artifact}/assets appdir/usr/bin/assets
cp ${dist_artifact}/${CARGO_MAKE_PROJECT_NAME} appdir/usr/bin/${CARGO_MAKE_PROJECT_NAME}
set_env OUTPUT ${dist_artifact}.AppImage
exec ../linuxdeploy --appdir appdir/ -d ../${CARGO_MAKE_PROJECT_NAME}.desktop -e appdir/usr/bin/${CARGO_MAKE_PROJECT_NAME} -l/usr/lib/x86_64-linux-gnu/libopenal.so.1 -i ../icons/48x48.png -o appimage
'''

[tasks.release-package-mac]
script_runner = "@duckscript"
script = '''
app_dir = set ${CARGO_MAKE_PROJECT_NAME}.app
macos_dir = set ${app_dir}/Contents/MacOS
cd dist/
mkdir ${macos_dir}
cp ../${dist_dir}/${CARGO_MAKE_PROJECT_NAME} ${macos_dir}/${CARGO_MAKE_PROJECT_NAME}
cp ../${dist_dir}/assets ${macos_dir}/
exec hdiutil create -fs HFS+ -volname "${CARGO_MAKE_PROJECT_NAME}" -srcfolder ${CARGO_MAKE_PROJECT_NAME}.app ${CARGO_MAKE_PROJECT_NAME}.dmg
'''

[tasks.release-package-windows]
script_runner = "@duckscript"
script = '''
cd dist/
exec zip -r9 ${dist_artifact}.zip ${dist_artifact}
'''

[tasks.publish]
dependencies = ["release-clean", "release"]
linux_alias = "publish-linux"
windows_alias = "publish-windows"

[tasks.publish-linux]
script_runner = "@duckscript"
script = '''
exec butler push dist/${dist_artifact}.AppImage ${ITCH_USERNAME}/${CARGO_MAKE_PROJECT_NAME}:${CARGO_MAKE_RUST_TARGET_OS}-${CARGO_MAKE_RUST_TARGET_ARCH}
'''

[tasks.publish-windows]
script_runner = "@duckscript"
script = '''
exec butler push dist/${dist_artifact}.zip ${ITCH_USERNAME}/${CARGO_MAKE_PROJECT_NAME}:${CARGO_MAKE_RUST_TARGET_OS}-${CARGO_MAKE_RUST_TARGET_ARCH}
'''