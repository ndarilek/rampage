---
kind: pipeline
name: linux
type: docker

clone:
  disable: true

steps:
  - name: clone
    image: alpine/git
    commands:
      - apk add --no-cache git-lfs
      - git config --global advice.detachedHead false
      - git clone --recursive $DRONE_REPO_LINK .
      - git checkout $DRONE_COMMIT

  - name: check
    when:
      branch:
        - main
    image: rust
    commands:
      - apt-get update -qq
      - apt-get install -qqy llvm-dev libclang-dev clang libspeechd-dev pkg-config libx11-dev libasound2-dev libudev-dev zip
      - cargo check --all

  - name: release
    when:
      branch:
        - release
    image: rust
    commands:
      - apt-get update -qq
      - apt-get install -qqy llvm-dev libclang-dev clang libspeechd-dev pkg-config libx11-dev libasound2-dev libudev-dev libopenal1 zip
      - cargo install -f cargo-make
      - cargo make -p release release
      - curl https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage -Lo linuxdeploy
      - chmod +x linuxdeploy

---
kind: pipeline
name: macos
type: exec

platform:
  os: darwin

clone:
  disable: true

steps:
  - name: clone
    commands:
      - git config --global advice.detachedHead false
      - git clone --recursive $DRONE_REPO_LINK .
      - git checkout $DRONE_COMMIT

  - name: default stable
    commands:
      - rustup default stable

  - name: check
    when:
      branch:
        - main
    commands:
      - cargo check --all

  - name: release
    when:
      branch:
        - release
    commands:
      - cargo install -f cargo-make
      - cargo make -p release release

---
kind: pipeline
name: windows
type: exec

platform:
  os: windows

clone:
  disable: true

steps:
  - name: clone
    commands:
      - git config --global advice.detachedHead false
      - git clone --recursive $env:DRONE_REPO_LINK .
      - git checkout $env:DRONE_COMMIT

  - name: default stable
    commands:
      - rustup default stable

  - name: check
    when:
      branch:
        - main
    commands:
      - cargo check --all

  - name: release
    when:
      branch:
        - release
    commands:
      - cargo install -f cargo-make
      - cargo make -p release release

---
kind: pipeline
name: publish
type: docker

trigger:
  branch:
    - release

depends_on:
  - linux
  - macos
  - windows

steps:
  - name: publish
    image: rust
    environment:
      BUTLER_API_KEY:
        from_secret: itch_api_key
    commands:
      - apt-get update -qq
      - apt-get install -qqy curl unzip
      - curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
      - unzip butler.zip
      - chmod +x butler
      - mv butler /usr/local/bin
      - cargo install -f cargo-make
